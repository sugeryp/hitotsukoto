
IPv4ヘッダの構成で大事な部分：
　TSO: データの種類を判別、リアルタイム性のデータ（電話等）なら優先的に流す
　TTL：　何回ルータを越えられるかを表す、ループ回避
　送信元アドレス、送信先アドレス

クラスA〜クラスEの使い分け：
　クラスDはマルチキャスト用で使わない
　クラスEは研究用で使わない
　クラスA~Cで選ぶ
　　

クラスの判別：動画参照


グローバルアドレスはプライベートアドレスとして定められている範囲外のアドレス：
　プライベートアドレス：クラスA〜Cの範囲内でそれぞれ範囲が定められている
　グローバルアドレス：クラスA〜Cの中でプライベートアドレスを除いた範囲

サブネット化！：
　サブネット化してもクラスは一緒

IPアドレスからMACアドレスの解決：
　ARP要求：フレームのデータ部分に、myIP, yourIP, myMAC,がふくまれる。
　　宛先はブロードキャスト：フレームヘッダのMACアドレスはブロードキャスト（FFFFFFFFFFFFFFFF）
　ARPのレスポンス：フレームのデータ部分に、myIP, yourIP, myMAC, yourMACが含まれる。
　　宛先はユニキャスト：ARP元のMACアドレス宛
　ARPテーブル：
　　レスポンス結果を保存して使い回す：ブロードキャストを減らす
　　PCもテーブルを持つ



アプリケーション層
　アプリケーションへのデータの提供方法を表現

プレゼンテーション層
　jpegとかmp3とかmp4とか異なるデータ形式から共通のデータ形式（転送形式）への変換を表現

セッション層
　転送形式に合わせて通信方法を決める

トランスポート
　データの分割と再組み立て

ネットワーク層
　経路決定

データリンク層
　媒体を通じて物理的な伝送を表現

物理層
　電圧、コネクタ形状等の物理的な情報を表現


TCP/IP



【質問】
①Ethernetの規格について
    IEEE802.3とEthernet2のどちらも利用されているのか、
    通信機器の種類やメーカーによってどちらかしか使えないということがあるのか。
    シスコ機器はどちらを利用するか選択できるのか、どちらかに決まっているのか。

②IEEE802.3について
    IEEE802.3の場合はLLCサブレイヤを含まずに通信するのか、つまりIEEE802.3を利用する場合、
    フレームの異常の検知と再送信要求は行われないのか。

③TCP/IPの各プロトコルの処理について
    HTTP、TCP、Ethernet等のプロトコルの実行機能を提供するものは、
    ・アプリケーション層は、ブラウザ等のアプリケーション
    ・トランスポート層、インターネット層はOS
    ・ネットワークインターフェース層はNIC
    という理解でよろしいでしょうか。

    （例）
    アプリケーション層
    　HTMLを要求したいので、ブラウザがデータにHTTPヘッダーを付与（HTTPでポート指定は必須ではない）
    　ブラウザが、OSのTCP用モジュールを呼び出し

    トランスポート層
    　TCP用のモジュールが既定の80番ポートでTCPを選択
    　TCPプロトコルでデータを分割し、TCPヘッダーを付与
    　OSのIP用モジュールを呼び出し

    インターネット層
    　IP用のモジュールがIPプロトコルでIPヘッダーを付与しパケットを作成
    　OSのEthernet用のモジュールを呼び出し

    ネットワークインターフェース層
    　Ethernet用モジュールがEthernetヘッダーを付与しフレームを作成、この際にARPで宛先IPの情報からMACアドレスを取得。
    　Ethernet用モジュールがフレームをNICへ送信
    　NICがLANケーブルへフレームのビットを流す。

    TCP、IP、Ethernetの処理をするOSのモジュールが存在して、
    考えていますがあってますか？
    Pythonでsocketを利用する際も、socketがOSのTCP/IP処理用のモジュールを呼び出している理解です。
    TCP、IP、Ethernetの処理をするOSのモジュールについて、一般的に何と呼ばれますか？（前提間違ってたらすみません）
    TCP/IPスタックでしょうか。


④プライベートアドレスのIP設計について
    サブネット化を使えばクラスAだけを使用してIPアドレス設計を行えばいいように思うのですが、
    クラスBやクラスCも必要なホストアドレス数に合わせて適切に使った方がいいのでしょうか？

    例えば、
    10.0.0.0/8, 10.128.0.0/9, 10.192.0.0/10, 10.224.0.0/11, 10.240.0./12, 10.248.0.0/13, 10.0.252.0.0/14, 10.254.0.0/15, 10.255.0.0/16, 10.255.128.0/17 ・・・
    と繰り返しサブネット化しておいけば、適切な大きさのサブネットを使用できると考えました。
    （適切な大きさに区切るのはブロードキャストドメインを適切にする。IP資源の有効活用のためと理解しています。）

    255.255.0.0より大きいサブネットマスクを使用する場合はクラスBを使用した方がいいでしょうか。
